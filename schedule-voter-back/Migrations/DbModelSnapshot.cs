// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using schedule_voter_back._Db;

namespace schedule_voter_back.Migrations
{
    [DbContext(typeof(Db))]
    partial class DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("schedule_voter")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("schedule_voter_back._Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("DisAccount")
                        .IsRequired()
                        .HasColumnName("dis_account");

                    b.Property<string>("Gw2Account")
                        .IsRequired()
                        .HasColumnName("gw2_account");

                    b.Property<string>("StaticName")
                        .IsRequired()
                        .HasColumnName("static_name");

                    b.HasKey("Id");

                    b.HasIndex("StaticName", "DisAccount", "Gw2Account")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("schedule_voter_back._Db.VoteResult", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("Tourney")
                        .HasColumnName("tourney");

                    b.Property<int>("Vote")
                        .HasColumnName("vote");

                    b.HasKey("UserId", "Tourney");

                    b.ToTable("vote_results");
                });

            modelBuilder.Entity("schedule_voter_back._Db.VoteResult", b =>
                {
                    b.HasOne("schedule_voter_back._Db.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
